{
    "$schema": "https://raw.githubusercontent.com/rdkcentral/rdkservices/main/Tools/json_generator/schemas/interface.schema.json",
    "jsonrpc": "2.0",
    "info": {
        "title": "DataCapture API", 
        "class": "DataCapture", 
        "description": "The DataCapture plugin allows you to capture an audio clip from an audio source and send it to a URL such as a music ID service."
    },
    "common": {
        "$ref": "../common/common.json"
    },
    "definitions": {
 
    },
    "methods": {
        "enableAudioCapture":{
            "summary": "Enables audio capturing to buffer.  \nReturn Values:  \n* `0` - No error  \n* `1 - 254` - request exceeds the maximum allowed buffer size. The error number represents the maximum buffer length, in seconds, that the set-top device can support.  \n* `255` - set top device cannot accommodate any level of audio buffering.",
            "params": {
                "type": "object",
                "properties": {
                    "bufferMaxDuration": {
                        "summary": "Buffer duration in seconds. RDK calculates actual buffer size based on duration length and PCM parameters. Specifying a duration of `0` disables capturing.",
                        "type": "integer",
                        "example": 6
                    }
                },
                "required": [
                    "bufferMaxDuration"
                ]
            },
            "result":{
                "type":"object",
                "properties": {
                    "error":{
                        "summary": "An error value",
                        "type": "integer",
                        "example": 0
                    },
                    "success": {
                        "$ref": "#/common/success"
                    }
                },
                "required": [
                    "error",
                    "success"
                ]
            }     
        },
        "getAudioClip": {
            "summary": "Requests the audio driver to capture an audio sample from the specified stream and then delivers the stream sample to a specified URL.  \nSupported streams:  \n* `primary` - The stream going to the analog output and the stream included in the HDMI output. This is the only stream that is valid when the request is made through a voice request.  \n* `secondary` - The stream is captured from a secondary decoder. A potential use case includes initiating a capture from a screen overlay where the user has a choice between primary or secondary audio (or the type of audio output to which the user listens â€“ TV or Bluetooth).",
            "events": {
                "onAudioClipReady" : "Triggered if an audio clip uploaded successfully or not"
            },
            "params": {
                "type": "object",
                "properties": {
                    "clipRequest": {
                        "summary": "An object that contains audio capture parameters",
                        "type": "object",
                        "properties": {
                            "stream": {
                                "summary": "Type of audio stream that will be captured",
                                "type": "string",
                                "example": "primary"
                            },
                            "url": {
                                "summary": "Destination where to deliver data and any required application parameters. The example shows a URL for a music ID service.",
                                "type": "string",
                                "example": "http://musicid.comcast.net/media-service-backend/analyze?trx=83cf6049-b722-4c44-b92e-79a504ae8f85:1458580048400&codec=PCM_16_16K&deviceId=5082732351093257712"
                            },
                            "duration": {
                                "summary": "Duration of clip in seconds",
                                "type": "number",
                                "example": 6
                            },
                            "captureMode": {
                                "summary": "Audio can be captured in the past or it can be captured starting with a trigger. Valid capture modes are: `precapture` - an audio clip is already stored in the buffer and capturing concludes when a call to this function is made. The audio data is sent immediately to the requested URL. `postCapture` - An audio capture starts when a call to this function is made and ends when the duration is reached. Sending data is delayed for the `duration` length. **Note**: This mode is not supported in the current implementation of the audio capture manager.",
                                "type": "string",
                                "example": "preCapture"
                            }
                        },
                        "required": [
                            "stream",
                            "url",
                            "duration",
                            "captureMode"
                        ]
                    }
                }
            },
            "result": {
                "type": "object",
                "properties": {
                    "error":{
                        "summary": "Returns `0` if the request is supported or an error if the request could not be fulfilled",
                        "type": "integer",
                        "example": 0
                    },
                    "success": {
                        "$ref": "#/common/success"
                    }
                },
                "required": [
                    "error",
                    "success"
                ]
            }
        }
    },
    "events": {
        "onAudioClipReady":{
            "summary": "Indicates whether an audio clip succeeded or failed to upload",
            "params": {
                "type": "object",
                "properties": {
                    "fileName": {
                        "summary": "The audio clip name",
                        "type": "string",
                        "example": "acm-songid0"
                    },
                    "status": {
                        "summary": "Whether the upload succeeded or failed",
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "summary": "Either `Success` or an error message",
                        "type": "string",
                        "example": "Success"
                    }
                },
                "required": [
                    "fileName",
                    "status",
                    "message"
                ]
            }
        }
    }
}