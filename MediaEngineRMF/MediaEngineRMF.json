{
    "$schema": "https://raw.githubusercontent.com/rdkcentral/rdkservices/main/Tools/json_generator/schemas/interface.schema.json",
    "jsonrpc": "2.0",
    "info": {
      "title": "MediaEngineRMF API",
      "class": "MediaEngineRMF",
      "description": "The `MediaEngineRMF` plugin allows you to play QAM video using Thunder"
    },
    "common": {
        "$ref": "../common/common.json"
    },
    "definitions": {
        "source_type": {
            "summary": "The type of source by RMF pipeline",
            "type": "string",
            "example": "qam"
        },
        "video_rectangle": {
            "summary": "Video rectangle dimensions",
            "type": "object",
            "properties": {
                "x" : {
                    "summary": "x axis offset in pixels",
                    "type": "number",
                    "example": 0
                },
                "y" : {
                    "summary": "y axis offset in pixels",
                    "type": "number",
                    "example": 0
                },
                "width" : {
                    "summary": "width in pixels",
                    "type": "number",
                    "example": 0
                },
                "length" : {
                    "summary": "length in pixels",
                    "type": "number",
                    "example": 0
                }
            }
        }
    },
    "methods": {
        "initialize":{
            "summary": "Performs one-time initialization necessary to use the specified source_type",
            "params": {
                "type": "object",
                "properties": {
                    "source_type": {
                        "$ref": "#/definitions/source_type"
                    }
                },
                "required": [
                    "source_type"
                ]
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "deinitialize":{
            "summary": "Performs final clean-up related to specified source_type",
            "params": {
                "type": "object",
                "properties": {
                    "source_type": {
                        "$ref": "#/definitions/source_type"
                    }
                },
                "required": [
                    "source_type"
                ]
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "play":{
            "summary": "Play specified QAM service",
            "params": {
                "type": "object",
                "properties": {
                    "source_type": {
                        "$ref": "#/definitions/source_type"
                    },
                    "identifier" : {
                        "summary": "A string that uniquely identifies the QAM/RMF service to play",
                        "type": "string",
                        "example": "ocap://0x3f0d"
                    }
                },
                "required": [
                    "source_type",
                    "identifier"
                ]
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "stop":{
            "summary": "Stops playback of the current service.",
            "params": {
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "mute":{
            "summary": "Mute/unmute audio",
            "params": {
                "type": "object",
                "properties": {
                    "mute" : {
                        "summary": "Use true to mute, false to unmute",
                        "type": "boolean",
                        "example": true
                    }
                },
                "required": [
                    "mute"
                ]
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "setVolume":{
            "summary": "Set audio volume",
            "params": {
                "type": "object",
                "properties": {
                    "volume" : {
                        "summary": "Audio level to set",
                        "type": "number",
                        "example": 0.5
                    }
                },
                "required": [
                    "volume"
                ]
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "setVideoRectangle":{
            "summary": "Set video rectangle",
            "params": {
                "type": "object",
                "properties": {
                    "video_rectangle" : {
                        "$ref": "#/definitions/video_rectangle"
                    }
                },
                "required": [
                    "video_rectangle"
                ]
            },
            "result": {
                "$ref": "#/common/result"
            }
        }
    },
    "events": {
        "onStatusChanged": {
            "summary": "Triggered when there is a change in the status of the underlying RMF plugin. Used to notify events.",
            "params": {
                "type": "object",
                "properties": {
                    "source": {
                        "summary": "Indicates the origin of the event",
                        "type": "string",
                        "example": "mpsink"
                    },
                    "code": {
                        "summary": "Integer code mapped to the event. Depends on the source of the event.",
                        "type": "number",
                        "example": "0"
                    },
                    "title": {
                        "summary": "Title indicating nature of the event.",
                        "type": "string",
                        "example": "report first video frame"
                    },
                    "message": {
                        "summary": "Optional details or context related to the event",
                        "type": "string",
                        "example": ""
                    }
                },
                "required": [
                    "source",
                    "code",
                    "title",
                    "message"
                ]
            },
            "onError": {
                "summary": "Triggered to notify any errors.",
                "params": {
                    "type": "object",
                    "properties": {
                        "source": {
                            "summary": "Indicates the origin of the error",
                            "type": "string",
                            "example": "qam"
                        },
                        "code": {
                            "summary": "Error code. Depends on the source of the error.",
                            "type": "number",
                            "example": "-1"
                        },
                        "title": {
                            "summary": "Title indicating nature of the error.",
                            "type": "string",
                            "example": "warning"
                        },
                        "message": {
                            "summary": "Optional details or context related to the error",
                            "type": "string",
                            "example": "BUFFER_UNDERFLOW"
                        }
                    },
                    "required": [
                        "source",
                        "code",
                        "title",
                        "message"
                    ]
                }
            }
        }
    }
}